name: CI Workflow

on: [pull_request, workflow_dispatch]

env:
  GO_VERSION_BUILD: "1.22"
  JAVA_VERSION: "11"

jobs:
  main-go:
    name: CI [Go]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ["1.21", "1.22", "1.23"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ vars.SSH_KNOWN_HOSTS }}
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        uses: ./.github/actions/build/go
        with:
          go-version: ${{ env.GO_VERSION_BUILD }}
      - name: Generate SDK
        uses: ./.github/actions/generate-sdk/go
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Test
        working-directory: ./sdk-repo-updated
        run: make test skip-non-generated-files=true

  lint-go:
    name: CI [Go]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ vars.SSH_KNOWN_HOSTS }}
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        uses: ./.github/actions/build/go
        with:
          go-version: ${{ env.GO_VERSION_BUILD }}
      - name: Generate SDK
        uses: ./.github/actions/generate-sdk/go
      - name: Install Go ${{ env.GO_VERSION_BUILD }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION_BUILD }}
      - name: Lint
        working-directory: ./sdk-repo-updated
        run: make lint skip-non-generated-files=true

  main-python:
    name: CI [Python]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ vars.SSH_KNOWN_HOSTS }}
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        uses: ./.github/actions/build/python
      - name: Generate SDK
        uses: ./.github/actions/generate-sdk/python
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}          
      - name: Install sdk
        working-directory: ./sdk-repo-updated
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          python -m venv .venv          
          . .venv/bin/activate
          python -m pip install --upgrade pip
          make install-dev
      - name: Lint
        working-directory: ./sdk-repo-updated
        run: |
          . .venv/bin/activate
          make lint
      - name: Test
        working-directory: ./sdk-repo-updated
        run: |
          . .venv/bin/activate
          make test

  main-java:
    name: CI [Java]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: ["11", "17", "21"]
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ vars.SSH_KNOWN_HOSTS }}
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ matrix.java-version }}
      - name: Checkout
        uses: actions/checkout@v5
      - name: Download OAS
        run: make download-oas
      - name: Generate SDK
        run: make generate-sdk
        env:
          LANGUAGE: java
      - name: Lint
        working-directory: ./sdk-repo-updated
        run: make lint
      - name: Test
        working-directory: ./sdk-repo-updated
        run: make test
